
package com.posidex.lifeasia.stub;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "BizTalkServiceInstance", targetNamespace = "http://KLI_ESB.LAServices/", wsdlLocation = "http://mum-bo-s288.kli.kotakgroup.com/Services/ClientMerge.svc?wsdl")
public class BizTalkServiceInstance
    extends Service
{

    private final static URL BIZTALKSERVICEINSTANCE_WSDL_LOCATION;
    private final static WebServiceException BIZTALKSERVICEINSTANCE_EXCEPTION;
    private final static QName BIZTALKSERVICEINSTANCE_QNAME = new QName("http://KLI_ESB.LAServices/", "BizTalkServiceInstance");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://mum-bo-s288.kli.kotakgroup.com/Services/ClientMerge.svc?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        BIZTALKSERVICEINSTANCE_WSDL_LOCATION = url;
        BIZTALKSERVICEINSTANCE_EXCEPTION = e;
    }

    public BizTalkServiceInstance() {
        super(__getWsdlLocation(), BIZTALKSERVICEINSTANCE_QNAME);
    }

    public BizTalkServiceInstance(WebServiceFeature... features) {
        super(__getWsdlLocation(), BIZTALKSERVICEINSTANCE_QNAME, features);
    }

    public BizTalkServiceInstance(URL wsdlLocation) {
        super(wsdlLocation, BIZTALKSERVICEINSTANCE_QNAME);
    }

    public BizTalkServiceInstance(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, BIZTALKSERVICEINSTANCE_QNAME, features);
    }

    public BizTalkServiceInstance(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BizTalkServiceInstance(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ClientMerge
     */
    @WebEndpoint(name = "BasicHttpBinding_ITwoWayAsync")
    public ClientMerge getBasicHttpBindingITwoWayAsync() {
        return super.getPort(new QName("http://KLI_ESB.LAServices/", "BasicHttpBinding_ITwoWayAsync"), ClientMerge.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ClientMerge
     */
    @WebEndpoint(name = "BasicHttpBinding_ITwoWayAsync")
    public ClientMerge getBasicHttpBindingITwoWayAsync(WebServiceFeature... features) {
        return super.getPort(new QName("http://KLI_ESB.LAServices/", "BasicHttpBinding_ITwoWayAsync"), ClientMerge.class, features);
    }

    private static URL __getWsdlLocation() {
        if (BIZTALKSERVICEINSTANCE_EXCEPTION!= null) {
            throw BIZTALKSERVICEINSTANCE_EXCEPTION;
        }
        return BIZTALKSERVICEINSTANCE_WSDL_LOCATION;
    }

}
